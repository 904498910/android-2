buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:1.1.3'
    classpath files ('libs/gradle-witness.jar')
  }
}

apply plugin: 'com.android.application'
apply plugin: 'witness'

if(project.hasProperty("duckduckgo.signing") && new File(project.property("duckduckgo.signing")).exists()) {
    apply from: project.property("duckduckgo.signing");
}

android {
  compileSdkVersion 23
  buildToolsVersion "23.0.1"

  repositories {
    mavenCentral()
  }

  dependencies {
    compile 'ch.acra:acra:4.5.0'
    compile ('com.android.support:recyclerview-v7:21.0.0') {
      exclude module: 'support-v4'
    }
    compile 'com.squareup:otto:1.3.4'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile project(':libs:OnionKit:libnetcipher')
    compile ('com.android.support:appcompat-v7:21.0.0') {
      exclude module: 'support-v4'
    }
    compile project(':libs:android-support-v4-preferencefragment')
  }

  dependencyVerification {
    verify = [
            'ch.acra:acra:b46be215fefd703fe91bd8c2a9f59ba87f28924316c556468c5e6141d1fc87a7',
            'com.android.support:recyclerview-v7:ab2390d688601b65e2f3a0718b3d25487e61546c4e20f81eb0b033f30ca15b31',
            'com.squareup:otto:cfeffe473932405e65c13231aebcbe3a414604f9c4dd4755b49c160efb111ce2',
            'com.squareup.picasso:picasso:233e18f59d25b6aff475df1e01a0661677f88af73838a27eb23aa21b96a3ac6e',
            'com.android.support:appcompat-v7:45e999dda55fe81d9cc1c7342b7b70480ff3f307baa8da0df767f92fc5c52cd1',
    ]
  }

  sourceSets {
    main {
      manifest.srcFile 'AndroidManifest.xml'
      java.srcDirs = ['src']
      resources.srcDirs = ['src']
      aidl.srcDirs = ['src']
      renderscript.srcDirs = ['src']
      res.srcDirs = ['res']
      assets.srcDirs = ['assets']
    }
  }

  buildTypes {
    debug {
      debuggable true
      jniDebuggable true
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  applicationVariants.all { variant ->
    variant.outputs.each { output ->
      def alignedOutputFile = output.outputFile

      if (variant.buildType.zipAlignEnabled) {
        if(variant.buildType.name.contains("release")) {
          output.outputFile = new File(alignedOutputFile.parent, "DuckDuckGo-release.apk")
        } else if(variant.buildType.name.contains("debug")) {
          output.outputFile = new File(alignedOutputFile.parent, "DuckDuckGo-debug.apk")
        }
      }
    }
  }
}
